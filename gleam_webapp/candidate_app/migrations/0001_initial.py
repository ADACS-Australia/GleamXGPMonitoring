# Generated by Django 4.0.3 on 2022-04-04 07:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Candidate",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("png_path", models.FileField(max_length=1024, null=True, upload_to="candidates/")),
                ("notes", models.TextField(blank=True, default="", null=True)),
                ("can_x_pix", models.FloatField(blank=True, null=True)),
                ("can_y_pix", models.FloatField(blank=True, null=True)),
                ("can_ra_deg", models.FloatField(blank=True, null=True)),
                ("can_dec_deg", models.FloatField(blank=True, null=True)),
                ("can_cent_sep_deg", models.FloatField(blank=True, null=True)),
                ("can_rad_pix", models.FloatField(blank=True, null=True)),
                ("can_rad_deg", models.FloatField(blank=True, null=True)),
                ("can_peak_flux", models.FloatField(blank=True, null=True)),
                ("can_fluence", models.FloatField(blank=True, null=True)),
                ("can_beam", models.FloatField(blank=True, null=True)),
                ("can_det_stat", models.FloatField(blank=True, null=True)),
                ("can_mod_ind", models.IntegerField(blank=True, null=True)),
                ("nks_name", models.CharField(blank=True, max_length=64, null=True)),
                ("nks_x_pix", models.FloatField(blank=True, null=True)),
                ("nks_y_pix", models.FloatField(blank=True, null=True)),
                ("nks_ra_deg", models.FloatField(blank=True, null=True)),
                ("nks_dec_deg", models.FloatField(blank=True, null=True)),
                ("nks_flux", models.FloatField(blank=True, null=True)),
                ("nks_res", models.FloatField(blank=True, null=True)),
                ("nks_res_dif", models.FloatField(blank=True, null=True)),
                ("nks_det_stat", models.FloatField(blank=True, null=True)),
                ("can_nks_sep_pix", models.FloatField(blank=True, null=True)),
                ("can_nks_sep_deg", models.FloatField(blank=True, null=True)),
                ("can_nks_flux_rat", models.FloatField(blank=True, null=True)),
                ("can_nks_is_close", models.BooleanField(null=True)),
                (
                    "can_ra_hms",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Candidate Right Acension (HH:MM:SS)"
                    ),
                ),
                (
                    "can_dec_dms",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Candidate Declination (DD:MM:SS)"
                    ),
                ),
                (
                    "nks_ra_hms",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="nks Right Acension (HH:MM:SS)"
                    ),
                ),
                (
                    "nks_dec_dms",
                    models.CharField(blank=True, max_length=32, null=True, verbose_name="nks Declination (DD:MM:SS)"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Filter",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(blank=True, max_length=64, null=True, verbose_name="Short Name")),
                ("description", models.CharField(blank=True, max_length=256, null=True, verbose_name="Description")),
            ],
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                ("observation_id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("obsname", models.CharField(blank=True, max_length=128, null=True, verbose_name="Obs name")),
                ("starttime", models.BigIntegerField(verbose_name="Start Time (GPS sec)")),
                ("stoptime", models.BigIntegerField(verbose_name="Stop Time (GPS sec)")),
                ("ra_tile_dec", models.FloatField(blank=True, null=True, verbose_name="RA (deg)")),
                ("dec_tile_dec", models.FloatField(blank=True, null=True, verbose_name="Dec (deg)")),
                ("ra_tile_hms", models.CharField(blank=True, max_length=32, null=True, verbose_name="RA (HH:MM:SS)")),
                ("dec_tile_dms", models.CharField(blank=True, max_length=32, null=True, verbose_name="Dec (DD:MM:SS)")),
                ("projectid", models.CharField(blank=True, max_length=16, null=True)),
                ("azimuth", models.FloatField(blank=True, null=True, verbose_name="Azimuth (deg)")),
                ("elevation", models.FloatField(blank=True, null=True, verbose_name="Elevation (deg)")),
                (
                    "frequency_channels",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Frequency Channels (x1.28 MHz)"
                    ),
                ),
                ("cent_freq", models.FloatField(blank=True, null=True, verbose_name="Centre Frequency (MHz)")),
                ("freq_res", models.IntegerField(blank=True, null=True, verbose_name="Frequency Resolution (KHz)")),
                ("int_time", models.FloatField(blank=True, null=True, verbose_name="Integration Time (s)")),
            ],
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("rating", models.IntegerField(blank=True, null=True)),
                (
                    "cand_type",
                    models.CharField(
                        choices=[("T", "Transient"), ("A", "Airplane"), ("RFI", "RFI"), ("SL", "Sidelobe")],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "candidate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="rating", to="candidate_app.candidate"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="rating", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="candidate",
            name="filter_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="candidate", to="candidate_app.filter"
            ),
        ),
        migrations.AddField(
            model_name="candidate",
            name="obs_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="candidate", to="candidate_app.observation"
            ),
        ),
    ]
